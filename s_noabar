	args=(commandArgs(TRUE))
	numero<-args[[1]]
	
	sex<-read.csv(paste(sep="_",numero,"sex.csv")) ######### row number = population number
	inds<-read.csv(paste(sep="_",numero,"abars.csv"))
	sex[is.na(sex)]<-5
	pops<-read.csv(paste(sep="_",numero,"pops.csv"))
	wea<-read.csv(paste(sep="_",numero,"wea.csv"))

	### iota = integer, number of populations // sampling events | input
	iota<-max(pops[,2],na.rm=1) # get the number of populations
	### nu = one dimension array of integers of length iota, number of tagged individuals per population | input
	kappa<-nu<-rep(0,iota) # initialise empty array of number of tagged individuals and observations
	for(q in 1:iota) nu[q]<-sum(pops[which(pops[,2]==q),4])
	## kappa = one dimension array of integers of length iota, number of sampling events per population | input
	for(q in 1:iota) kappa[q] <- max(inds[which(inds[,2]==q),1])
	### eta = three dimensions array {iota x nu[i] x kappa[i]}, number of vocalisations per sampling event per individual per population | input
	eta<-array(-20,c(iota,max(nu),max(kappa))) #initialise empty structure
	for(i in 1:iota)
		for(n in 1:nu[i])
			for(k in 1:kappa[i])
				eta[i,n,k]<-inds[which((inds[,1]==k)&(inds[,2]==i)),(n+2)]
	### omicron = real number of vocalisations per population, per sex per sampling event | input

	chi<-omicron<-array(-20,c(iota,2,max(kappa))) #initialise empty structure for tagged individuals' vocalisations (chi) and population ones (omicron)
	for(i in 1:iota)
		for(s in 1:2)
			for(k in 1:kappa[i])
				omicron[i,s,k]<-pops[which((pops[,2]==i)&(pops[,3]==s)),(k+4)]

	lot<-matrix(nrow=iota,ncol=max(kappa),data=0)
	hit<-matrix(nrow=iota,ncol=max(kappa),data=0)
	ws<-matrix(nrow=iota,ncol=max(kappa),data=0)
	rh<-matrix(nrow=iota,ncol=max(kappa),data=0)
	ap<-matrix(nrow=iota,ncol=max(kappa),data=0)
	ml<-matrix(nrow=iota,ncol=max(kappa),data=0)
	toy<-rep(0,iota)
	we<-matrix(nrow=length(rownames(wea)),ncol=length(colnames(wea)),data=0)
	for(q in 3:8) for(w in 1:length(wea[,2])) we[w,q]<-(wea[w,q]-mean(wea[,q]))/sd(wea[,q])

	for(i in 1:iota)
		{
		tm<-we[which(wea[,1]==i),3:8]
		toy[i]<-unique(wea[which(wea[,1]==i),9])[1]
		for(k in 1:kappa[i])
			{
			lot[i,k]<-tm[k,1]
			hit[i,k]<-tm[k,2]
			ws[i,k]<-tm[k,3]
			rh[i,k]<-tm[k,4]
			ap[i,k]<-tm[k,5]
			ml[i,k]<-tm[k,6]
			}
		}
	###### initialise data frames for recruited individuals
	omega<-100 #umber of augmented individuals
	theta_initza<-array(NA,c(iota,omega,max(kappa),2)) #initialise empty structure for number of individual vocalisations of recruited individuals


	theta_initzb<-array(NA,c(iota,(omega),max(kappa),2)) #initialise empty structure for number of individual vocalisations of recruited individuals

	psi<-array(0,c(iota,2)) #initialise empty structure for number of tagged individuals per population per sex
	for(i in 1:iota)
		for(s in 1:2)
		{
			for(k in 1:kappa[i])
				{
				theta_initzb[i,,k,s]<- rep(0,omega)# ifelse((omicron[i,s,k]>0),rmultinom(1,omicron[i,s,k],rep(1/omega,omega)),rep(0,omega))
				}
		}
	qp<-c(1,2,1,3)
	xi_initzb<-array(1,c(iota,2,omega)) #initialise array of recruitment flag
	

	initzb<-function(){list(xi=xi_initzb,theta=theta_initzb)}


	require(rjags)

	listb<-list(qp=qp,iota=iota,omicron=omicron,omega=omega,kappa=kappa,lot=lot,hit=hit,ws=ws,rh=rh,ap=ap,ml=ml)

	print(Sys.time())
	print(paste("##########",numero,"##############",sep="_"))
	b<-jags.model(n.chains=4,file='m_noabar',data=listb,inits=initzb)
	print("finished declaring model at")
	print(Sys.time())
	print(paste(sep="_",numero,"rB"))
	update(b,4e5)
	print("finished burn-in at")
	print(Sys.time())
	print(paste(sep="_",numero,"rB"))
	save<-c("zeta","beta_sex","beta_weather","beta_occ","alpha") 
	rb<-coda.samples(variable.names=save,n.iter=8e5,thin=40,model=b)
	print(paste(sep="_",numero,"rB"))
	save(rb,file=paste(sep="_",numero,"rb.erre"),version=2)
print("finished sampling at")
	print(Sys.time())

	print(Sys.time())
